@charset "utf-8";
/* html reset <-html 하위버전에서도 인식할 수 있도록 하는 역할 */
header,
footer,
section,
article,
nav,
aside,
main,
figure,
figcaption{
	display: block;
}

html,
body{
	min-height: 100%;
}
body{
	margin: 0px;
	min-width: 320px;
}
body,
table,
button,
input,
textarea,
select{
	font-size: 14px;
	font-family: sans-serif;
}
	/* 폰트 사이즈가 적용되지 않는 엘리먼트까지 적용시키기 위해 위처럼 작성한다. */
	/*	나눔글꼴이 다운되지 않을 때, 내장되어 있는 글꼴/sans-serif(고딕계열)의 글씨를 렌더링 해서 보여준다.*/
img,
video{
	max-width: 100%;
	height: auto;
	/*height: auto;로 주는 이유는 폭에 맞추어 높이가 비율에 맞도록 가변할 수 있게 만들기 위함*/
	overflow:hidden;
}
	/* img, video는 인라인 엘리먼트이며 너비를 가지고 있다. 하지만 iframe은 너비와 높이에 대한 비율정보가 없다.
	따라서 높이값이 우리가 원하는 데로 컨트롤되지 않는다. -> 위의 방법을 iframe을 위와 같이 사용할 수 없다.*/
.vframe{
	position: relative;
	max-width: 100%;
	height:0;
	padding-top: 56.25%;
}
.vframe>iframe{
	position: absolute;
	top: 0;
	width:100%;
	height: 100%;
}
/* ALL */
 @font-face {
  font-family: NG;
  font-style: normal;
  font-weight: 400;
  src: url(https://fonts.gstatic.com/ea/nanumgothic/v5/NanumGothic-Regular.eot);
  src: url(https://fonts.gstatic.com/ea/nanumgothic/v5/NanumGothic-Regular.eot?#iefix) format('embedded-opentype'),
       url(https://fonts.gstatic.com/ea/nanumgothic/v5/NanumGothic-Regular.woff2) format('woff2'),
       url(https://fonts.gstatic.com/ea/nanumgothic/v5/NanumGothic-Regular.woff) format('woff'),
       url(https://fonts.gstatic.com/ea/nanumgothic/v5/NanumGothic-Regular.ttf) format('truetype');
 }
 /* cf) www.google.com/fonts/earlyaccess/
 위의 내용은 웹폰트에 대한 부분이다.
 해당 글꼴은 나눔 고딕이다.
 원래 w3c에서 권장하는 글씨체 파일은 woff이다. eot는 ie7,8등에서 사용하고자 있는 url이다.*/

  body{
  	background-image: -webkit-linear-gradient(#ccc,#fff);
  	background-image: -moz-linear-gradient(#ccc,#fff);
  	background-image: -ms-linear-gradient(#ccc,#fff);
  	background-image: -o-linear-gradient(#ccc,#fff);
  	background-image: linear-gradient(to bottom,#ccc,#fff);
}

	/* 그라디언트를 줄 때 linear-gradient를 쓰고 (그라디언트 방향, 색상1, 색상2)
 	 1. 그라디언트는 top(from 개념), to bottom, 45deg(to 개념)으로 표시된다.*/

 .header>h1{
 	 font-size: 28px;
 	 font-weight: bold;
 	 text-shadow: 1px 1px 0 #fff,-1px -1px 0 #bbb;
 }
 	/* font-weight는 normal, bold가 있다. 해당 내용은 400, 700으로 써도 표현된다.*/
 	/* text-shadow: x y blur color <-텍스트 쉐도우의 기본 속성 
 	텍스트 쉐도우는 값을 여러번 적용할 수 있다.*/
 .gnb *{
 	box-sizing:content-box;
 }
  /* .gnb *는 부트스트랩css적용으로 인해 깨지는 부분들을 복구하기 위한 부분이다.*/
 .search{
 	letter-spacing: -4px;
 }

 .search>input{
 	vertical-align: top;
 	border-radius: 3px;
 }
	/* input은 인라인 블록이다. 
	vertical-align은 인라인, 인라인블록에만 적용된다. */
	/* border-radius도 좌측상단부터 적용된다. border-radius: 3px 3px 3px 3px가 현재는 생략되어 있는 형태*/
	/* *(universal selector/공통선택자->.search>*{})은 모든 엘리먼트 선택을 의미함.
	 해당 부분은 input으로 쓰기를 추천한다. 해당 부분을 역순으로 검색하여 찾아 들어가기 때문 
	 *을 쓰면 모든 엘리먼트를 검색하고 search가 부모인 것을 후순으로 다시 찾는다. */
 
 .search>[type="search"]{
 	border: 1px solid #ccc;
 	height: 32px;
 	width: 160px;
 	box-shadow: 0 0 4px #ccc inset;
 	 }
 	/*'[]'는 속성을 선택하기 위해 입력*/
   /* box-shadow: x y blur color inset 형태이다. inset은 옵션사항이다.*/
 
 .search>[type="submit"]{
 	width: 50px;
 	height: 32px;
 	background: #fff;
 	border: 1px solid #ccc;
 	box-shadow: 0 0 4px #aaa;
 }

main,
.lnb,
.aside{
	margin-bottom: 15px
}
main{
	background:#fff;
	box-shadow: 0 0 4px #999;
	box-shadow: 0 0 4px rgba(0,0,0,.3);
	border-radius: 8px;
	min-height: 300px;
	overflow: hidden;
}
	/* 
	 #main보다 main를 선택한 이유는? 선택자 우선 순위 때문. #main이 main보다 선택자 우선 순위가 높다. ->
	다른 개발자와 협업할 때, 해당 개발자가 override하고 싶을 때를 염두한 고려 -> 우선순위가 낮은 것을 선택해준다.
	 우선순위가 높아지는 경우는 부모 선택자까지 적어 경로를 적어준 경우 > 아이디 선택자 > 단순 작성 순이다.
	  ex) '.bady>main{}'(부모선택자까지 적어준 경우) > '#main{}' > 'main{}'
	 */
	/* box-shadow에는 알파값을 주지 않으면, 색이 다른 백그라운드 색상값과 섞이지 않음(투명한 요소가 없음)
	투명한 값을 표현하고 싶으면 'rgba'를 통해 알파값을 표현해주어야 함, 'a'가 알파값 = 위의 .3(=0.3) 값이 알파값이다.
	 1) 선언하지 않으면 default는 1(불투명)
	 2) rgba는 css3 속성이라, 익스플로러 7/8/9에서는 인식을 못함
	  따라서 rgba값위에 box-shawdow: 0 0 4px #999;와 같은 값을 써주어야 함*/

main>article{
	padding: 15px;
}
.lnb ul,
.aside ul{
	margin: 0;
	padding: 0;
	list-style-type: none;
}
.lnb {
	text-shadow: 1px 1px 0 #333;
}
.lnb h2{
	background: #666;
	border-radius: 4px 4px 0 0;
	font-size: 14px;
	color: #fff;
	padding: 0 10px;
	line-height: 32px;
	margin: 0;
}
 	/* 1) border-radius도 시계방향으로 좌상 우상 우하 좌하 순으로 표시
 	 2) 위 아래 패딩으로 설정하지 않은 이유는 디자이너가 높이를 설정해주는 경우,
 	 일일이 계산해서 진행해야 되는 부분이 존재하고 브라우져마다 다를 수 있기 때문
 	 3) line-height에 의해 높이 설정을 맞춤*/

.lnb li{
	margin: 1px 0;
}
.lnb a{
	display:block;
	background: #777;
	padding: 0 10px;
	height: 32px;
	line-height: 34px;
	text-decoration: none;
	color: #fff;
	-webkit-transition:.2s;
	-moz-transition:.2s;
	-ms-transition:.2s;
	-o-transition:.2s;
	transition:.2s;
}
	/* .lnb>ul>li>a 로 안쓰고, .lnb a 형태로 쓰는 이유 -> 1) 선택자 우선 순위가 낮아진다. 2) 연산이 빨라진다.*/
	/* .lnb>ul>li>a 의 경우 해당 경로에 있는 a만 선택 .lnb a의 경우, .lnb안에 있는 모든 a가 선택 */
	/* line-height에 대한 웹 접근성 지침의 최소단위는 32px다.*/
	/* transition은 hover(가상 선택자)에 적혀있는 값으로 변환 하는 데 걸리는 시간이다.
	  transition은 아직까지  지원하지 않는 브라우져가 존재할 수 있다.
	  transition을 hover에만 쓰면 마우스를 땔 때에는 부드럽게 전환되지 않는다.*/

.lnb :last-child>a {
	border-radius: 0 0 4px 4px;
}
	/* .lnd li:last-child>a 형태는 .lnb :last-child>a 형태로 단축할 수 있다.*/
.lnb a:hover,
.lnb a:focus{
	background: #555;
}

.aside{
	border: 1px solid #ddd;
	border-radius: 4px;
	background: #fff;
	padding: 0 10px;
	box-sizing:content-box;

}
/* 부모자식간에 수직마진이 중첩이 될 때, 부모 요소에 보더를 주거나 padding(-top)을 주면,
 수직마진 현상이 생기지 않는다.*/
 /* box-sizing은 부트스트랩에 의해 박스가 border-box로 변경된 부분을 다시 복원하기 위함이다.*/
.aside h2{
	font-size: 14px;
	margin: 0;
	border-bottom: 1px solid #ddd;
	line-height: 32px;
}
.aside ul{
	padding: 10px 0;
}
.aside a{
	display: block;
	line-height: 32px;
}
	/* 폰트 사이즈 디폴트는 16px */
.footer{
	border-top: 1px dotted #ccc;
}
.footer>p{
	text-align: center;
	color: #959595;
}
	/* 한국형 콘텐츠 웹접근성 지침에 의해, 배경색과 글자 색이 잘 대비되어야 한다.
	Google에서 color contrast checker로 검색 -> WCAG 2 AA Compliant에서 YES가 나와야함
	최근엔 지침이 완화되어 contrast ratio가 3이 나오면 됨*/

.table-rwd{
	overflow: auto;
}
	/*테이블: 모바일에서는 테이블의 내용이 넘칠 떄, 가로 스크롤바가 default로 보이지 않음*/
.table{
	border-collapse: collapse;
	/* border-collapse: collapse;셀 보더들을 겹치게 해주는 기능 */
}
.table th,
.table td{
	border-bottom: 1px solid #ddd;
	padding: 5px;
	text-align: center;
}
.table thead th{
	background: #eee;
	border-top: 2px solid #bbb;
}
.table tbody>:last-child{
	border-bottom: 2px solid #bbb;
}
.table td{
	width: 14%;
	vertical-align: top;
	/* vertical-align은 인라인과 인라인 블록에만 적용할 수 있다.
	td는 예외상황으로, 해당 부분에 vertical-align을 주면 텍스트에 vertical-align이 적용된다.*/
}
.sign-up{
	margin-bottom: 15px;
}
.sign-up dt{
	font-weight: 700;
	font-size: 16px;
}
.sign-up input+label{
	margin-right: 20px;
}
	/* 인접형제선택자: 'input+label" -> 인풋 다음에 레이블 요소가 나올 때 선택*/

/* Mobile */
	
	/*모바일용 쿼리는 미디어 쿼리 설정 안하겠습니다. why? 오래된 모바일 브라우져는 css3를 지원하지 않아
	미디어 쿼리를 읽을 수 없다. 따라서 미디어 쿼리를 작성하지 않으면 옛날 핸드폰을 구매한 사람들이 미디어 쿼리를
	작성한 것보다 많은 사람들에게 해당 내용을 보여줄 수 있다. 이런 기법을 '모바일 퍼스트 css법'이라고 한다. */
 
 .ctnr{
 	margin: 0 10px;
 }

.skip{
	display:none;
}
.gnb>h2{
	height: 1px;
	position: absolute;
	overflow: hidden;
	margin: 0;
	opacity:0;
	/*opacity:0;으로 설정하면, 글자를 투명하게 설정하면서도 화면 낭독기가 해당 부분을 읽을 수 있다.*/
}
.gnb>button{
	border:0;
	background: #666;
	width: 40px;
	height: 36px;
	padding: 36px 0 0 0;
	overflow: hidden;
	border-radius: 3px;
	position: absolute;
	cursor: pointer;
	top: 15px;
	right: 10px;
	box-sizing:border-box;
	/* box-sizing은 부트스트랩에 의해 박스가 border-box로 변경된 부분을 default
	(.gnb *{box-sizing:content-box;})해줬던 부분으로 인해 오류가 발생한 부분을 다시 복원하기 위함이다.*/
}
	/* 1) absolute 처리를 한 이유는 다른 하위 속성들이 1px씩 밀리지 않도록 하기 위해서
	 height값은 0이 아닌 1px를 쓴 이유는 화면 낭독기가 읽지 못하는 경우가 발생하기 때문
	 2) button의 기본 속성은 border-box이다. 보더박스의 경우,height값과 padding 값 중 큰 값으로 설정된다.
	 3) 일반적인 box의 속성은 content-box이다.
	 4) background: #666; url(xxx.png) no-repeat ->백그라운드 칼라가 아래 깔리고 이미지가 위에 깔림
	 'no-repeat을 하지 않으면 바둑판모양으로 이미지가 깔림'
	 5) cursor: pointer;를 쓰면 마우스를 올리면 커서 모양으로 바뀜 */
.gnb>button:before{
	content:"";
	position: absolute;
	top: 4px;
	left: 4px;
	width: 32px;
	height: 4px;
	border-top: 12px double #fff;
	border-bottom: 12px double #fff;
	box-sizing:content-box;
	/* box-sizing은 부트스트랩에 의해 박스가 border-box로 변경된 부분을 다시 복원하기 위함이다.*/
}

	/* 1) :before를 누르면 첫번째 자식 요소를 선택하게 됨. 단 여기서는 css 상에서 넣어줌
	content이하의 속성은  content:""를 꾸미는 속성들이다.
	2) border-top과 margin에서의 double을 쓰면 border-top(=12px)를 삼등분한다. 이를 삼등분해사,
	 위에 첫줄과 세번째줄의 경우, 원래 색상을 넣어주고 두 번째 영역에는 투명(background칼라)가 보여진다.	*/
.gnb>ul{
	background: #666;
	border-radius: 4px;
	overflow: hidden;
	display: none;
}
	/*overflow:hidden을 준 이유: 자식요소'a'가 삐져나가 있는 부분 때문에 border-radious가 안보인 부분을 표시해주기 위해서*/
.gnb ul{
	margin: 0;
	padding: 0;
	list-style: none;
}
.gnb a{
	display: block;
	background: #666;
	color: #fff;
	line-height: 32px;
	text-decoration: none;
	padding: 0 10px;
	white-space: nowrap;
	overflow: hidden;
	text-overflow:ellipsis;
}
	/*	1) white-space: nowrap; 삐져나간 글자에 대해 줄바꿈하지 말도록 만듬
	2) text-overflow:ellipsis; 텍스트가 넘칠 때 말 줄임표를 쓰도록 만듬
	-해당 부분을 사용하기 위해서는 white-space:nowrap과 overflow:hidden이 선언되어 있어야 하며,
	디스플레이가 인라인이면 적용되지 않음 */
.gnb>ul>li>a{
	background: #444;
}
.gnb li li{
	border-top: 1px dotted #444;
}
	/*'.gnb>ul>li>ul>li'와 '.gnb li li'는 현재 구조에서 동일하다.*/
.gnb li li:first-child{
	border: 0;
}
	/*'.gnb>ul>li>ul:first-child'와 '.gnb li li:first-child'는 현재 구조에서 동일하다.*/
.search{
	margin: 15px 0;
	padding:  0 60px 0 0;
	position: relative;
}
.search>[type="search"]{
	display: block;
	width: 100%;
}
.search>[type="submit"]{
	width: 50px;
	position: absolute;
	top: 0;
	right: 0;
}
	/* 1) 부모의 폭의 type-"search"의 width는 70%, type="submit"의 width를 30%로 설정하면, 
	search와 submit의 자간 14포인트가 존재해, 인라인 블럭인 서치와 서브밋이 다른 줄에 표시 되게 됨*/

/* Tablet & Desktop */

	/* 하단의 @media에 대한 설명
	1.only all and 는 생략 가능하다. 생략하면 기본적으로 only all and로 간주된다.
 	2. 'all' 위치에는 screen, print 등의 용어도 사용가능하다. 프린트로 하면 프린트할 때만 표시되고,
 	스크린을 작성하면 PC,모바일등의 화면 출력에서 작성된다. 
 	and 는  and 좌우의 조건을 모두 충족할 때만 실행되는 개념이다. */
 	/* 타블렛, 모바일 등은 공인된 기준이 없어,
 	 크기를 어느수준을 타블렛/모바일로 설정하는 지 대해서는 임의로 설정해야 한다.*/

@media (min-width: 768px){
	body,
	table,
	input,
	textarea,
	button{
		font-family: NG, sans-serif;
	}
	
	.gnb>button{
		display: none;
	}
	.search{
		position: absolute;
		top: 20px;
		right: 10px;
		margin: 0;
		width: 200px;
	}
	.gnb{
		margin-bottom: 15px;
		position: relative;
	}
	/* 포지션 relative를 주는 이유? 자식 요소인 ul이 .gnb를 기준으로 위치를 선정할 수 있도록 하기 위해서 */
	.gnb>ul{
		display: block !important ;
		height: 40px;
		border-bottom: 40px solid #fff;
		padding: 0 0 0 25px;
		overflow: visible;
		background: -webkit-linear-gradient(#555 0%, #333 50%, #000 50%, #222 100%);
		background: -moz-linear-gradient(#555 0%, #333 50%, #000 50%, #222 100%);
		background: -ms-linear-gradient(#555 0%, #333 50%, #000 50%, #222 100%);
		background: -o-linear-gradient(#555 0%, #333 50%, #000 50%, #222 100%);
		background: linear-gradient(to bottom, #555 0%, #333 50%, #000 50%, #222 100%);
	}
	/* !important를 사용하면, 선택자의 가장 우선순위에 속하게 된다.*/
	/* border-bottom을 준 이유는 해당 위치에 세부 매뉴 .gnb>ul>ul을 작성할 공간을 만들기 위해서임
	그라디언트에서 %는 그라디언트의 시작 위치와 끝나는 위치이다.*/
	.gnb ul ul{
		display: none;
	}
	/*.gnb>ul>li>ul는 .gbn ul ul 혹은 .gnb li ul로 단축해서 쓸 수 있다.*/
	.gnb>ul>li{
		float: left;
	}
	/*float: left;를 쓰는 이유: 해당 부분을 display:inline-block으로 처리할 수 있으나
	 자간 때문에 스타일링이 어려움*/
	 /* 포지션을 따로 설정하지 않으면 기본 값은 'static'이다. */
	 .gnb a{
	 	background: none !important;
	 }
	 .gnb>ul>li>a{
	 	line-height: 40px;
	 	padding: 0 25px;
	 }
	.gnb>ul>.active>a{
	 	background: #fff !important;
	 	color: #000;
	 	font-weight: 700;
	 	margin-top: 4px;
	 	line-height: 36px;
	 	border-radius: 4px 4px 0 0;
	 }
	 /* 부모요소에 플롯 속성이 있으면 부모자식간의 수직마진중첩현상은 발생하지 않는다.*/

	.gnb>ul>li.active>ul{
	  display: block;
	  left: 20px;
	}
	/* .gnb(부모요소)에 relative속성을 주었기 때문에, .gnb를 기준으로 왼쪽 20 px 위치에서 해당 요소가 시작한다. */
	
    /*	.gnb ul li:nth-child(3)>ul{
		left:100px;
	}
	 특정 선택자를 선택 하기 위해서 nth-child()을 사용 */
	
	.gnb ul ul{
      position: absolute;
	}
 	.gnb li li{
 		border: 0;
 		display: inline-block;
 	}
 	.gnb li li>a{
 		color: #666;
 		line-height: 40px;
 	}
 	.body:after{
 		content:"";
 		display: block;
 		clear: both;
 	}
	/* .body:after는 바디클래스가 종료되기 직전에 가상의 자식 엘리먼트를 하나를 선택한다는 의미임
	 before와 after 선택자는 항상 content라는 (인라인)속성과 함께함
	 클리어 보스를 실행하면 메인, 네비게이션, 어사이드가 플롯이 되어 있더라도 바디가 0이 되지 않음
	 (세 속성 중 가장 큰 값을 따름)
	 하단의 타블랫, 데스크톱에서 칼럼때문에 .body:after{}이하의 요소를 작성 */
 }

/* Tablet */
@media (min-width:768px) and (max-width:1024px) {

 	/* 타블릿용의 해상도는 투컬럼으로 구성되는데, 
 	가변폭과 고정폭이 같이 사용하는 방식을 하이브리드 레이아웃이라고 한다.*/
 	.body{
 		padding-right: 200px;
 	}
 	main{
 		float:left;
 		width: 100%;
 		margin-right: -180px;
 		/* 부모엘리먼트(바디 엘리먼트)를 기준으로 %를 계산
 		바디 클래스에 패딩을 주면 패딩값만큼 공간이 비게 됨. 그 공간에 lnb와 aside를 밀어 넣을 계획*/
 	}
 	/*플롯값을 주고 위드 값을 따로 주지 않으면, 자식 요소의 너비를 따라감*/
 	.lnb,
 	.aside{
 		float: right;
 		width: 180px;
 		box-sizing:border-box;
 		position: relative;
 		left: 200px;
 		 /* aside영역에 보더와 마진을 위(all)에서 주었기 때문에 width를 180으로 주면 사이즈를 통일 시킬 수 없다.
 		해당 영역을 통일하려면 'box-sizing:border-box'를 주면 된다. css3속성이기 때문에 ie8 이하에서
 		지원하지 않는 문제가 있다. 
 		브라우져별 속성 사용 여부는 'caniuse.com에서 확인하면 된다. 확인 결과 사용해도 되기 때문에 사용!*/
 	}
 }

/* Desktop */
@media (min-width: 1025px){
	.body{
		padding: 0 200px 0 220px;
	}
	main{
		float: left;
		/*float을 줘야 형제 노드(lnb,aside)에 영향을 줄 수 있기 때문에 작성해야 함*/
		width: 100%;
		margin-right: -100%;
	}
	.lnb,
	.aside{
		position: relative;
	}
	.lnb{
		float: left;
		width: 200px;
		right: 220px;
	}
	.aside{
		float: right;
		width: 158px;
		left: 200px;
	}
	.ctnr{
		position: relative;
		/* 이전에 '서치'에 포지션: 앱솔루트를 주었기 때문에 사용. 기존의 경우, body를 기준으로 위치를 잡기 때문에
		콘테이너에 포지션 relative를 선언해야 함
		바디의 경우, 별도의 마진 값이 없기 때문에 서치창이 */
		max-width: 1280px;
		margin: 0 auto;
		/* auto: (좌,우 혹은 상, 하)마진 값을 자동으로 나누어 가짐*/
		padding: 0 10px;
	}
	.search{
		top: 0;
		right: 10px;
		/* .ctnr의 요소에 영향을 받음, .ctnr에 패딩을 준 만큼 오른쪽으로 이동시켜야 함*/
	}
}